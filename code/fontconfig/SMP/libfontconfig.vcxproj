<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="DebugDLLWinRT|Win32">
      <Configuration>DebugDLLWinRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLLWinRT|x64">
      <Configuration>DebugDLLWinRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugWinRT|Win32">
      <Configuration>DebugWinRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugWinRT|x64">
      <Configuration>DebugWinRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLStaticDeps|Win32">
      <Configuration>ReleaseDLLStaticDeps</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLStaticDeps|x64">
      <Configuration>ReleaseDLLStaticDeps</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLWinRTStaticDeps|Win32">
      <Configuration>ReleaseDLLWinRTStaticDeps</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLWinRTStaticDeps|x64">
      <Configuration>ReleaseDLLWinRTStaticDeps</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLWinRT|Win32">
      <Configuration>ReleaseDLLWinRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLWinRT|x64">
      <Configuration>ReleaseDLLWinRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseWinRT|Win32">
      <Configuration>ReleaseWinRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseWinRT|x64">
      <Configuration>ReleaseWinRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\fontconfig\fcfreetype.h" />
    <ClInclude Include="..\fontconfig\fcprivate.h" />
    <ClInclude Include="..\fontconfig\fontconfig.h" />
    <ClInclude Include="..\src\fcarch.h" />
    <ClInclude Include="..\src\fcatomic.h" />
    <ClInclude Include="..\src\fcdeprecate.h" />
    <ClInclude Include="..\src\fcftint.h" />
    <ClInclude Include="..\src\fcint.h" />
    <ClInclude Include="..\src\fcmutex.h" />
    <ClInclude Include="..\src\fcobjs.h" />
    <ClInclude Include="..\src\fcwindows.h" />
    <ClInclude Include="..\src\ftglue.h" />
    <ClInclude Include="config.h" />
    <ClInclude Include="fc-case\fccase.h" />
    <ClInclude Include="fc-lang\fclang.h" />
    <ClInclude Include="src\fcalias.h" />
    <ClInclude Include="src\fcaliastail.h" />
    <ClInclude Include="src\fcftalias.h" />
    <ClInclude Include="src\fcftaliastail.h" />
    <ClInclude Include="src\fcstdint.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\src\fcatomic.c" />
    <ClCompile Include="..\src\fccache.c">
      <ForcedIncludeFiles>io.h;%(ForcedIncludeFiles)</ForcedIncludeFiles>
    </ClCompile>
    <ClCompile Include="..\src\fccfg.c">
      <ForcedIncludeFiles>io.h;%(ForcedIncludeFiles)</ForcedIncludeFiles>
    </ClCompile>
    <ClCompile Include="..\src\fccharset.c" />
    <ClCompile Include="..\src\fccompat.c">
      <ForcedIncludeFiles>io.h;%(ForcedIncludeFiles)</ForcedIncludeFiles>
    </ClCompile>
    <ClCompile Include="..\src\fcdbg.c" />
    <ClCompile Include="..\src\fcdefault.c" />
    <ClCompile Include="..\src\fcdir.c" />
    <ClCompile Include="..\src\fcformat.c" />
    <ClCompile Include="..\src\fcfreetype.c" />
    <ClCompile Include="..\src\fcfs.c" />
    <ClCompile Include="..\src\fchash.c" />
    <ClCompile Include="..\src\fcinit.c" />
    <ClCompile Include="..\src\fclang.c" />
    <ClCompile Include="..\src\fclist.c" />
    <ClCompile Include="..\src\fcmatch.c" />
    <ClCompile Include="..\src\fcmatrix.c" />
    <ClCompile Include="..\src\fcname.c" />
    <ClCompile Include="..\src\fcobjs.c" />
    <ClCompile Include="..\src\fcpat.c" />
    <ClCompile Include="..\src\fcptrlist.c" />
    <ClCompile Include="..\src\fcrange.c" />
    <ClCompile Include="..\src\fcserialize.c" />
    <ClCompile Include="..\src\fcstat.c">
      <ForcedIncludeFiles>io.h;%(ForcedIncludeFiles)</ForcedIncludeFiles>
    </ClCompile>
    <ClCompile Include="..\src\fcstr.c" />
    <ClCompile Include="..\src\fcweight.c" />
    <ClCompile Include="..\src\fcxml.c">
      <ForcedIncludeFiles>io.h;%(ForcedIncludeFiles)</ForcedIncludeFiles>
    </ClCompile>
    <ClCompile Include="..\src\ftglue.c" />
  </ItemGroup>
  <ItemGroup>
    <None Include="libfontconfig.def" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{DBF1E8F7-5B7D-4CBF-842A-B7E0C02520DC}</ProjectGuid>
    <RootNamespace>libfontconfig</RootNamespace>
    <WindowsTargetPlatformVersion Condition="'$(WindowsTargetPlatformVersion)' != ''">$(WindowsTargetPlatformVersion)</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <TargetName>fontconfigd</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|Win32'">
    <TargetName>fontconfigd_winrt</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <TargetName>fontconfigd</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|x64'">
    <TargetName>fontconfigd_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <TargetName>fontconfig</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'">
    <TargetName>fontconfig</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|Win32'">
    <TargetName>fontconfig_winrt</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|Win32'">
    <TargetName>fontconfig_winrt</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <TargetName>fontconfig</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'">
    <TargetName>fontconfig</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|x64'">
    <TargetName>fontconfig_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|x64'">
    <TargetName>fontconfig_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>libfontconfigd</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|Win32'">
    <TargetName>libfontconfigd_winrt</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>libfontconfigd</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|x64'">
    <TargetName>libfontconfigd_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>libfontconfig</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|Win32'">
    <TargetName>libfontconfig_winrt</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>libfontconfig</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|x64'">
    <TargetName>libfontconfig_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;_LIB;_DEBUG;_WIN32_WINNT=0x0502;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconvd.lib;libfreetyped.lib;libxml2d.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;_LIB;_DEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconvd_winrt.lib;libfreetyped_winrt.lib;libxml2d_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;_LIB;_DEBUG;_WIN32_WINNT=0x0601;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconvd.lib;libfreetyped.lib;libxml2d.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;_LIB;_DEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconvd_winrt.lib;libfreetyped_winrt.lib;libxml2d_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;_DEBUG;_WIN32_WINNT=0x0502;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconvd.lib;freetyped.lib;xml2d.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;_DEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconvd_winrt.lib;freetyped_winrt.lib;xml2d_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x86\$(RootNamespace).winmd</WindowsMetadataFile>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;_DEBUG;_WIN32_WINNT=0x0601;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconvd.lib;freetyped.lib;xml2d.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <MinimumRequiredVersion>6.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;_DEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconvd_winrt.lib;freetyped_winrt.lib;xml2d_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x64\$(RootNamespace).winmd</WindowsMetadataFile>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;_LIB;NDEBUG;_WIN32_WINNT=0x0502;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv.lib;libfreetype.lib;libxml2.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;_LIB;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv_winrt.lib;libfreetype_winrt.lib;libxml2_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;_LIB;NDEBUG;_WIN32_WINNT=0x0601;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv.lib;libfreetype.lib;libxml2.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;_LIB;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv_winrt.lib;libfreetype_winrt.lib;libxml2_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;NDEBUG;_WIN32_WINNT=0x0502;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconv.lib;freetype.lib;xml2.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;NDEBUG;_WIN32_WINNT=0x0502;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv.lib;libfreetype.lib;libxml2.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconv_winrt.lib;freetype_winrt.lib;xml2_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x86\$(RootNamespace).winmd</WindowsMetadataFile>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv_winrt.lib;libfreetype_winrt.lib;libxml2_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x86\$(RootNamespace).winmd</WindowsMetadataFile>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;NDEBUG;_WIN32_WINNT=0x0601;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconv.lib;freetype.lib;xml2.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>6.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;NDEBUG;_WIN32_WINNT=0x0601;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv.lib;libfreetype.lib;libxml2.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>6.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconv_winrt.lib;freetype_winrt.lib;xml2_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x64\$(RootNamespace).winmd</WindowsMetadataFile>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_WINDOWS;LIBXML_STATIC;DLL_EXPORT;_USRDLL;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;.\;..\;.\src;$(OutDir)\include;$(OutDir)\include\libxml2;$(OutDir)\include\freetype2;$(ProjectDir)\..\..\prebuilt\include;$(ProjectDir)\..\..\prebuilt\include\libxml2;$(ProjectDir)\..\..\prebuilt\include\freetype2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4267;4090;4244;4018;4101;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libfontconfig.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv_winrt.lib;libfreetype_winrt.lib;libxml2_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4006,4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x64\$(RootNamespace).winmd</WindowsMetadataFile>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\fontconfig
copy ..\fontconfig\*.h "$(OutDir)"\include\fontconfig
mkdir $(OutDir)\licenses
copy ..\COPYING $(OutDir)\licenses\fontconfig.txt
mkdir $(OutDir)\fonts
copy .\fonts.conf $(OutDir)\fonts
mkdir $(OutDir)\fonts\conf.d
copy ..\conf.d\*.conf $(OutDir)\fonts\conf.d\</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\src\fcalias.h (
del ..\src\fcalias.h
)
if exist ..\src\fcaliastail.h (
del ..\src\fcaliastail.h
)
if exist ..\src\fcftalias.h (
del ..\src\fcftalias.h
)
if exist ..\src\fcftaliastail.h (
del ..\src\fcftaliastail.h
)
if exist ..\src\fcobjshash.h (
del ..\src\fcobjshash.h
)
if exist ..\src\fcstdint.h (
del ..\src\fcstdint.h
)
if exist ..\fc-case\fccase.h (
del ..\fc-case\fccase.h
)
if exist ..\fc-glyphname\fcglyphname.h (
del ..\fc-glyphname\fcglyphname.h
)
if exist ..\fc-lang\fclang.h (
del ..\fc-lang\fclang.h
)
if exist "$(OutDir)"\include\fontconfig (
rd /s /q "$(OutDir)"\include\fontconfig
cd ../
cd $(ProjectDir)
)
if not exist .\fc-blanks\fcblanks.h (
python ..\fc-blanks\fc-blanks.py &lt; ..\fc-blanks\fcblanks.tmpl.h &gt; .\fc-blanks\fcblanks.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\fontconfig (
rmdir /s /q "$(OutDir)"\include\fontconfig
)
if exist $(OutDir)\licenses\fontconfig.txt (
del /f /q $(OutDir)\licenses\fontconfig.txt
)
if exist $(OutDir)\fonts (
rmdir /s /q $(OutDir)\fonts
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>