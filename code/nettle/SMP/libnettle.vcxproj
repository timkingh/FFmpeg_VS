<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="DebugDLLWinRT|Win32">
      <Configuration>DebugDLLWinRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLLWinRT|x64">
      <Configuration>DebugDLLWinRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugWinRT|Win32">
      <Configuration>DebugWinRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugWinRT|x64">
      <Configuration>DebugWinRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLStaticDeps|Win32">
      <Configuration>ReleaseDLLStaticDeps</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLStaticDeps|x64">
      <Configuration>ReleaseDLLStaticDeps</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLWinRTStaticDeps|Win32">
      <Configuration>ReleaseDLLWinRTStaticDeps</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLWinRTStaticDeps|x64">
      <Configuration>ReleaseDLLWinRTStaticDeps</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLWinRT|Win32">
      <Configuration>ReleaseDLLWinRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLWinRT|x64">
      <Configuration>ReleaseDLLWinRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseWinRT|Win32">
      <Configuration>ReleaseWinRT</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseWinRT|x64">
      <Configuration>ReleaseWinRT</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\aes.h" />
    <ClInclude Include="..\arcfour.h" />
    <ClInclude Include="..\arctwo.h" />
    <ClInclude Include="..\asn1.h" />
    <ClInclude Include="..\base16.h" />
    <ClInclude Include="..\base64.h" />
    <ClInclude Include="..\bignum.h" />
    <ClInclude Include="..\blowfish.h" />
    <ClInclude Include="..\buffer.h" />
    <ClInclude Include="..\camellia.h" />
    <ClInclude Include="..\cast128.h" />
    <ClInclude Include="..\cbc.h" />
    <ClInclude Include="..\ccm.h" />
    <ClInclude Include="..\cfb.h" />
    <ClInclude Include="..\chacha-poly1305.h" />
    <ClInclude Include="..\chacha.h" />
    <ClInclude Include="..\ctr.h" />
    <ClInclude Include="..\curve25519.h" />
    <ClInclude Include="..\des-compat.h" />
    <ClInclude Include="..\des.h" />
    <ClInclude Include="..\dsa-compat.h" />
    <ClInclude Include="..\dsa.h" />
    <ClInclude Include="..\eax.h" />
    <ClInclude Include="..\ecc-curve.h" />
    <ClInclude Include="..\ecc.h" />
    <ClInclude Include="..\ecdsa.h" />
    <ClInclude Include="..\eddsa.h" />
    <ClInclude Include="..\gcm.h" />
    <ClInclude Include="..\gosthash94.h" />
    <ClInclude Include="..\hkdf.h" />
    <ClInclude Include="..\hmac.h" />
    <ClInclude Include="..\knuth-lfib.h" />
    <ClInclude Include="..\macros.h" />
    <ClInclude Include="..\md2.h" />
    <ClInclude Include="..\md4.h" />
    <ClInclude Include="..\md5-compat.h" />
    <ClInclude Include="..\md5.h" />
    <ClInclude Include="..\memops.h" />
    <ClInclude Include="..\memxor.h" />
    <ClInclude Include="..\nettle-meta.h" />
    <ClInclude Include="..\nettle-types.h" />
    <ClInclude Include="..\pbkdf2.h" />
    <ClInclude Include="..\pgp.h" />
    <ClInclude Include="..\pkcs1.h" />
    <ClInclude Include="..\poly1305.h" />
    <ClInclude Include="..\pss-mgf1.h" />
    <ClInclude Include="..\pss.h" />
    <ClInclude Include="..\realloc.h" />
    <ClInclude Include="..\ripemd160.h" />
    <ClInclude Include="..\rsa.h" />
    <ClInclude Include="..\salsa20.h" />
    <ClInclude Include="..\serpent.h" />
    <ClInclude Include="..\sexp.h" />
    <ClInclude Include="..\sha.h" />
    <ClInclude Include="..\sha1.h" />
    <ClInclude Include="..\sha2.h" />
    <ClInclude Include="..\sha3.h" />
    <ClInclude Include="..\twofish.h" />
    <ClInclude Include="..\umac.h" />
    <ClInclude Include="..\yarrow.h" />
    <ClInclude Include="config.h" />
    <ClInclude Include="nettle-stdint.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\aes-decrypt.c" />
    <ClCompile Include="..\aes-encrypt-table.c" />
    <ClCompile Include="..\aes-encrypt.c" />
    <ClCompile Include="..\aes-invert-internal.c" />
    <ClCompile Include="..\aes-set-decrypt-key.c" />
    <ClCompile Include="..\aes-set-encrypt-key.c" />
    <ClCompile Include="..\aes-set-key-internal.c" />
    <ClCompile Include="..\aes128-meta.c" />
    <ClCompile Include="..\aes128-set-decrypt-key.c" />
    <ClCompile Include="..\aes128-set-encrypt-key.c" />
    <ClCompile Include="..\aes192-meta.c" />
    <ClCompile Include="..\aes192-set-decrypt-key.c" />
    <ClCompile Include="..\aes192-set-encrypt-key.c" />
    <ClCompile Include="..\aes256-meta.c" />
    <ClCompile Include="..\aes256-set-decrypt-key.c" />
    <ClCompile Include="..\aes256-set-encrypt-key.c" />
    <ClCompile Include="..\aesdata.c" />
    <ClCompile Include="..\arcfour-crypt.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\arcfour.c" />
    <ClCompile Include="..\arctwo-meta.c" />
    <ClCompile Include="..\arctwo.c" />
    <ClCompile Include="..\base16-decode.c" />
    <ClCompile Include="..\base16-encode.c" />
    <ClCompile Include="..\base16-meta.c" />
    <ClCompile Include="..\base64-decode.c" />
    <ClCompile Include="..\base64-encode.c" />
    <ClCompile Include="..\base64-meta.c" />
    <ClCompile Include="..\base64url-decode.c" />
    <ClCompile Include="..\base64url-encode.c" />
    <ClCompile Include="..\base64url-meta.c" />
    <ClCompile Include="..\blowfish.c" />
    <ClCompile Include="..\buffer-init.c" />
    <ClCompile Include="..\buffer.c" />
    <ClCompile Include="..\camellia-absorb.c" />
    <ClCompile Include="..\camellia-invert-key.c" />
    <ClCompile Include="..\camellia-table.c" />
    <ClCompile Include="..\camellia128-crypt.c" />
    <ClCompile Include="..\camellia128-meta.c" />
    <ClCompile Include="..\camellia128-set-decrypt-key.c" />
    <ClCompile Include="..\camellia128-set-encrypt-key.c" />
    <ClCompile Include="..\camellia192-meta.c" />
    <ClCompile Include="..\camellia256-crypt.c" />
    <ClCompile Include="..\camellia256-meta.c" />
    <ClCompile Include="..\camellia256-set-decrypt-key.c" />
    <ClCompile Include="..\camellia256-set-encrypt-key.c" />
    <ClCompile Include="..\cast128-meta.c" />
    <ClCompile Include="..\cast128.c" />
    <ClCompile Include="..\cbc.c" />
    <ClCompile Include="..\ccm-aes128.c" />
    <ClCompile Include="..\ccm-aes192.c" />
    <ClCompile Include="..\ccm-aes256.c" />
    <ClCompile Include="..\ccm.c" />
    <ClCompile Include="..\cfb.c" />
    <ClCompile Include="..\chacha-core-internal.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\chacha-crypt.c" />
    <ClCompile Include="..\chacha-poly1305-meta.c" />
    <ClCompile Include="..\chacha-poly1305.c" />
    <ClCompile Include="..\chacha-set-key.c" />
    <ClCompile Include="..\chacha-set-nonce.c" />
    <ClCompile Include="..\cnd-memcpy.c" />
    <ClCompile Include="..\ctr.c" />
    <ClCompile Include="..\des-compat.c" />
    <ClCompile Include="..\des.c" />
    <ClCompile Include="..\des3.c" />
    <ClCompile Include="..\eax-aes128-meta.c" />
    <ClCompile Include="..\eax-aes128.c" />
    <ClCompile Include="..\eax.c" />
    <ClCompile Include="..\fat-x86_64.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\gcm-aes.c" />
    <ClCompile Include="..\gcm-aes128-meta.c" />
    <ClCompile Include="..\gcm-aes128.c" />
    <ClCompile Include="..\gcm-aes192-meta.c" />
    <ClCompile Include="..\gcm-aes192.c" />
    <ClCompile Include="..\gcm-aes256-meta.c" />
    <ClCompile Include="..\gcm-aes256.c" />
    <ClCompile Include="..\gcm-camellia128-meta.c" />
    <ClCompile Include="..\gcm-camellia128.c" />
    <ClCompile Include="..\gcm-camellia256-meta.c" />
    <ClCompile Include="..\gcm-camellia256.c" />
    <ClCompile Include="..\gcm.c" />
    <ClCompile Include="..\gosthash94-meta.c" />
    <ClCompile Include="..\gosthash94.c" />
    <ClCompile Include="..\hkdf.c" />
    <ClCompile Include="..\hmac-md5.c" />
    <ClCompile Include="..\hmac-ripemd160.c" />
    <ClCompile Include="..\hmac-sha1.c" />
    <ClCompile Include="..\hmac-sha224.c" />
    <ClCompile Include="..\hmac-sha256.c" />
    <ClCompile Include="..\hmac-sha384.c" />
    <ClCompile Include="..\hmac-sha512.c" />
    <ClCompile Include="..\hmac.c" />
    <ClCompile Include="..\knuth-lfib.c" />
    <ClCompile Include="..\md2-meta.c" />
    <ClCompile Include="..\md2.c" />
    <ClCompile Include="..\md4-meta.c" />
    <ClCompile Include="..\md4.c" />
    <ClCompile Include="..\md5-compat.c" />
    <ClCompile Include="..\md5-meta.c" />
    <ClCompile Include="..\md5.c" />
    <ClCompile Include="..\memeql-sec.c" />
    <ClCompile Include="..\memxor.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\memxor3.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\nettle-lookup-hash.c" />
    <ClCompile Include="..\nettle-meta-aeads.c" />
    <ClCompile Include="..\nettle-meta-armors.c" />
    <ClCompile Include="..\nettle-meta-ciphers.c" />
    <ClCompile Include="..\nettle-meta-hashes.c" />
    <ClCompile Include="..\pbkdf2-hmac-sha1.c" />
    <ClCompile Include="..\pbkdf2-hmac-sha256.c" />
    <ClCompile Include="..\pbkdf2.c" />
    <ClCompile Include="..\poly1305-aes.c" />
    <ClCompile Include="..\poly1305-internal.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\realloc.c" />
    <ClCompile Include="..\ripemd160-compress.c" />
    <ClCompile Include="..\ripemd160-meta.c" />
    <ClCompile Include="..\ripemd160.c" />
    <ClCompile Include="..\salsa20-128-set-key.c" />
    <ClCompile Include="..\salsa20-256-set-key.c" />
    <ClCompile Include="..\salsa20-core-internal.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\salsa20-crypt.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\salsa20-set-key.c" />
    <ClCompile Include="..\salsa20-set-nonce.c" />
    <ClCompile Include="..\salsa20r12-crypt.c" />
    <ClCompile Include="..\serpent-decrypt.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\serpent-encrypt.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\serpent-meta.c" />
    <ClCompile Include="..\serpent-set-key.c" />
    <ClCompile Include="..\sha1-meta.c" />
    <ClCompile Include="..\sha1.c" />
    <ClCompile Include="..\sha224-meta.c" />
    <ClCompile Include="..\sha256-compress.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\sha256-meta.c" />
    <ClCompile Include="..\sha256.c" />
    <ClCompile Include="..\sha3-224-meta.c" />
    <ClCompile Include="..\sha3-224.c" />
    <ClCompile Include="..\sha3-256-meta.c" />
    <ClCompile Include="..\sha3-256.c" />
    <ClCompile Include="..\sha3-384-meta.c" />
    <ClCompile Include="..\sha3-384.c" />
    <ClCompile Include="..\sha3-512-meta.c" />
    <ClCompile Include="..\sha3-512.c" />
    <ClCompile Include="..\sha3-permute.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\sha3.c" />
    <ClCompile Include="..\sha384-meta.c" />
    <ClCompile Include="..\sha512-224-meta.c" />
    <ClCompile Include="..\sha512-256-meta.c" />
    <ClCompile Include="..\sha512-compress.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\sha512-meta.c" />
    <ClCompile Include="..\sha512.c" />
    <ClCompile Include="..\twofish-meta.c" />
    <ClCompile Include="..\twofish.c" />
    <ClCompile Include="..\umac-l2.c" />
    <ClCompile Include="..\umac-l3.c" />
    <ClCompile Include="..\umac-nh-n.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\umac-nh.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\umac-poly128.c" />
    <ClCompile Include="..\umac-poly64.c" />
    <ClCompile Include="..\umac-set-key.c" />
    <ClCompile Include="..\umac128.c" />
    <ClCompile Include="..\umac32.c" />
    <ClCompile Include="..\umac64.c" />
    <ClCompile Include="..\umac96.c" />
    <ClCompile Include="..\version.c" />
    <ClCompile Include="..\write-be32.c" />
    <ClCompile Include="..\write-le32.c" />
    <ClCompile Include="..\write-le64.c" />
    <ClCompile Include="..\yarrow256.c" />
    <ClCompile Include="..\yarrow_key_event.c" />
  </ItemGroup>
  <ItemGroup>
    <None Include="libnettle.def" />
  </ItemGroup>
  <ItemGroup>
    <YASM Include="x86\aes-decrypt-internal.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86\aes-encrypt-internal.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86\arcfour-crypt.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86\camellia-crypt-internal.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86\md5-compress.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86\sha1-compress.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\aes-decrypt-internal-2.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\aes-decrypt-internal.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\aes-encrypt-internal-2.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\aes-encrypt-internal.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\camellia-crypt-internal.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\chacha-core-internal.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\cpuid.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\gcm-hash8.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\md5-compress.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\memxor-2.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\memxor.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\memxor3.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\poly1305-internal.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\salsa20-core-internal.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\salsa20-crypt.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\serpent-decrypt.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\serpent-encrypt.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\sha1-compress.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\sha256-compress.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\sha3-permute.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\sha512-compress.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\umac-nh-n.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="x86_64\umac-nh.s">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{070FEF2B-0C3F-4F33-9D3C-53C7330BF518}</ProjectGuid>
    <RootNamespace>libnettle</RootNamespace>
    <WindowsTargetPlatformVersion Condition="'$(WindowsTargetPlatformVersion)' != ''">$(WindowsTargetPlatformVersion)</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <DefaultLanguage>en-US</DefaultLanguage>
    <WindowsAppContainer>true</WindowsAppContainer>
    <AppContainerApplication>true</AppContainerApplication>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '15.0'">10.0</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '14.0'">8.1</ApplicationTypeRevision>
    <ApplicationTypeRevision Condition="'$(VisualStudioVersion)' == '12.0'">8.1</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion Condition="'$(ApplicationTypeRevision)|$(WindowsTargetPlatformVersion)' == '10.0|'">10.0.10240.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0.10240.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\yasm.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libnettled</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libnettled_winrt</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libnettled</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libnettled_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettled</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettled_winrt</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettled</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettled_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libnettle</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libnettle_winrt</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libnettle</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libnettle_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettle</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettle</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettle_winrt</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettle_winrt</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettle</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettle</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettle_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>nettle_winrt</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
    <MSBuildWarningsAsMessages>MSB8012</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0502;HAVE_CONFIG_H;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmpd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>HAVE_CONFIG_H;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmpd_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0601;HAVE_CONFIG_H;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmpd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugWinRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>HAVE_CONFIG_H;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmpd_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0502;HAVE_CONFIG_H;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>gmpd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>HAVE_CONFIG_H;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x86\$(RootNamespace).winmd</WindowsMetadataFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>gmpd_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0601;HAVE_CONFIG_H;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>6.1</MinimumRequiredVersion>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>gmpd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLWinRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>HAVE_CONFIG_H;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x64\$(RootNamespace).winmd</WindowsMetadataFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>gmpd_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0502;HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmp_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0601;HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWinRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmp_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0502;HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>gmp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0502;HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x86\$(RootNamespace).winmd</WindowsMetadataFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>gmp_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x86\$(RootNamespace).winmd</WindowsMetadataFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x86\;$(ProjectDir)\..\..\prebuilt\lib\x86\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmp_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0601;HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>6.1</MinimumRequiredVersion>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>gmp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>_WIN32_WINNT=0x0601;HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>6.1</MinimumRequiredVersion>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmp.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRT|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x64\$(RootNamespace).winmd</WindowsMetadataFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>gmp_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLWinRTStaticDeps|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <PreprocessorDefinitions>HAVE_CONFIG_H;NDEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;$(OutDir)\include;$(ProjectDir)\..\..\prebuilt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <TreatSpecificWarningsAsErrors>4113;%(TreatSpecificWarningsAsErrors)</TreatSpecificWarningsAsErrors>
      <DisableSpecificWarnings>4244;4146;4267;4098;%(DisableSpecificWarnings)</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>libnettle.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '10.0'">10.0</MinimumRequiredVersion>
      <MinimumRequiredVersion Condition="'$(ApplicationTypeRevision)' == '8.1'">8.1</MinimumRequiredVersion>
      <WindowsMetadataFile>$(OutDir)\lib\x64\$(RootNamespace).winmd</WindowsMetadataFile>
      <AdditionalLibraryDirectories>$(OutDir)\lib\x64\;$(ProjectDir)\..\..\prebuilt\lib\x64\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libgmp_winrt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\nettle
copy ..\aes.h "$(OutDir)"\include\nettle
copy ..\arcfour.h "$(OutDir)"\include\nettle
copy ..\arctwo.h "$(OutDir)"\include\nettle
copy ..\asn1.h "$(OutDir)"\include\nettle
copy ..\base16.h "$(OutDir)"\include\nettle
copy ..\base64.h "$(OutDir)"\include\nettle
copy ..\bignum.h "$(OutDir)"\include\nettle
copy ..\blowfish.h "$(OutDir)"\include\nettle
copy ..\buffer.h "$(OutDir)"\include\nettle
copy ..\camellia.h "$(OutDir)"\include\nettle
copy ..\cast128.h "$(OutDir)"\include\nettle
copy ..\cbc.h "$(OutDir)"\include\nettle
copy ..\ccm.h "$(OutDir)"\include\nettle
copy ..\cfb.h "$(OutDir)"\include\nettle
copy ..\chacha.h "$(OutDir)"\include\nettle
copy ..\chacha-poly1305.h "$(OutDir)"\include\nettle
copy ..\curve25519.h "$(OutDir)"\include\nettle
copy ..\ctr.h "$(OutDir)"\include\nettle
copy ..\des.h "$(OutDir)"\include\nettle
copy ..\des-compat.h "$(OutDir)"\include\nettle
copy ..\dsa.h "$(OutDir)"\include\nettle
copy ..\dsa-compat.h "$(OutDir)"\include\nettle
copy ..\eax.h "$(OutDir)"\include\nettle
copy ..\ecc.h "$(OutDir)"\include\nettle
copy ..\ecc-curve.h "$(OutDir)"\include\nettle
copy ..\ecdsa.h "$(OutDir)"\include\nettle
copy ..\eddsa.h "$(OutDir)"\include\nettle
copy ..\gcm.h "$(OutDir)"\include\nettle
copy ..\gosthash94.h "$(OutDir)"\include\nettle
copy ..\hmac.h "$(OutDir)"\include\nettle
copy ..\hkdf.h "$(OutDir)"\include\nettle
copy ..\knuth-lfib.h "$(OutDir)"\include\nettle
copy ..\macros.h "$(OutDir)"\include\nettle
copy ..\md2.h "$(OutDir)"\include\nettle
copy ..\md4.h "$(OutDir)"\include\nettle
copy ..\md5.h "$(OutDir)"\include\nettle
copy ..\md5-compat.h "$(OutDir)"\include\nettle
copy ..\memops.h "$(OutDir)"\include\nettle
copy ..\memxor.h "$(OutDir)"\include\nettle
copy ..\nettle-meta.h "$(OutDir)"\include\nettle
copy .\nettle-stdint.h "$(OutDir)"\include\nettle
copy ..\nettle-types.h "$(OutDir)"\include\nettle
copy ..\pbkdf2.h "$(OutDir)"\include\nettle
copy ..\pgp.h "$(OutDir)"\include\nettle
copy ..\pkcs1.h "$(OutDir)"\include\nettle
copy ..\pss.h "$(OutDir)"\include\nettle
copy ..\pss-mgf1.h "$(OutDir)"\include\nettle
copy ..\poly1305.h "$(OutDir)"\include\nettle
copy ..\realloc.h "$(OutDir)"\include\nettle
copy ..\ripemd160.h "$(OutDir)"\include\nettle
copy ..\rsa.h "$(OutDir)"\include\nettle
copy ..\salsa20.h "$(OutDir)"\include\nettle
copy ..\serpent.h "$(OutDir)"\include\nettle
copy ..\sexp.h "$(OutDir)"\include\nettle
copy ..\sha.h "$(OutDir)"\include\nettle
copy ..\sha1.h "$(OutDir)"\include\nettle
copy ..\sha2.h "$(OutDir)"\include\nettle
copy ..\sha3.h "$(OutDir)"\include\nettle
copy ..\twofish.h "$(OutDir)"\include\nettle
copy ..\umac.h "$(OutDir)"\include\nettle
copy ..\yarrow.h "$(OutDir)"\include\nettle
copy version.h "$(OutDir)"\include\nettle
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\nettle.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist ..\nettle-stdint.h (
del ..\nettle-stdint.h
)
if exist ..\version.h (
del ..\version.h
)
if exist "$(OutDir)"\include\nettle (
rd /s /q "$(OutDir)"\include\nettle
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\nettle (
rmdir /s /q "$(OutDir)"\include\nettle
)
if exist $(OutDir)\licenses\nettle.txt (
del /f /q $(OutDir)\licenses\nettle.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <Preprocessor>1</Preprocessor>
      <Parser>1</Parser>
    </YASM>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\yasm.targets" />
  </ImportGroup>
</Project>